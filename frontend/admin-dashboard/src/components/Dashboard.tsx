import React, { useState, useEffect } from "react"; import { Grid, Typography, Box, Button, Alert } from "@mui/material"; import PeopleIcon from "@mui/icons-material/People"; import WarningIcon from "@mui/icons-material/Warning"; import CheckCircleIcon from "@mui/icons-material/CheckCircle"; import TrendingUpIcon from "@mui/icons-material/TrendingUp"; import StatsCard from "./StatsCard"; import MerchantList from "./MerchantList"; import { dashboardAPI } from "../services/api"; import { DashboardStats } from "../types"; const Dashboard: React.FC = () => { const [stats, setStats] = useState<DashboardStats>({ totalMerchants: 0, escalatedMerchants: 0, atRiskMerchants: 0, completionRate: 0 }); const [loading, setLoading] = useState(true); const [error, setError] = useState<string | null>(null); const fetchDashboardData = async () => { try { setLoading(true); const data = await dashboardAPI.getDashboardStats(); setStats(data); setError(null); } catch (err) { setError("Failed to fetch dashboard data"); console.error("Dashboard fetch error:", err); } finally { setLoading(false); } }; useEffect(() => { fetchDashboardData(); const interval = setInterval(fetchDashboardData, 30000); return () => clearInterval(interval); }, []); if (loading) { return <Box sx={{ p: 3 }}><Typography>Loading dashboard...</Typography></Box>; } if (error) { return ( <Box sx={{ p: 3 }}> <Alert severity="error" action={<Button onClick={fetchDashboardData}>Retry</Button>}> {error} </Alert> </Box> ); } return ( <Box> <Typography variant="h4" sx={{ mb: 3, fontWeight: 600 }}> WhatsApp Onboarding Dashboard </Typography> <Grid container spacing={3} sx={{ mb: 4 }}> <Grid item xs={12} sm={6} md={3}> <StatsCard title="Total Merchants" value={stats.totalMerchants} icon={<PeopleIcon />} color="primary.main" subtitle="All onboarding cases" trend={{ value: 12, isPositive: true }} /> </Grid> <Grid item xs={12} sm={6} md={3}> <StatsCard title="Escalated Cases" value={stats.escalatedMerchants} icon={<WarningIcon />} color="error.main" subtitle="Need immediate attention" trend={{ value: -5, isPositive: false }} /> </Grid> <Grid item xs={12} sm={6} md={3}> <StatsCard title="At Risk" value={stats.atRiskMerchants} icon={<TrendingUpIcon />} color="warning.main" subtitle="SLA might be breached" /> </Grid> <Grid item xs={12} sm={6} md={3}> <StatsCard title="Completion Rate" value={stats.completionRate} icon={<CheckCircleIcon />} color="success.main" subtitle="Successful onboardings" trend={{ value: 8, isPositive: true }} /> </Grid> </Grid> <MerchantList /> </Box> ); }; export default Dashboard;
