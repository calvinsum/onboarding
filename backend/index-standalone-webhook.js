const express = require("express"); const cors = require("cors"); const helmet = require("helmet"); const morgan = require("morgan"); const moment = require("moment"); const app = express(); const PORT = 3000; app.use(helmet()); app.use(cors()); app.use(express.json()); app.use(morgan("combined")); const merchants = new Map(); app.get("/", (req, res) => { res.json({ message: "🤖 WhatsApp Onboarding Assistant API", version: "1.0.0", features: ["✅ SLA-aware onboarding flow", "📱 WhatsApp integration via Twilio", "🚨 Automatic escalation handling", "📊 Admin dashboard and analytics"], endpoints: { health: "/health", onboarding: "/api/onboarding", admin: "/api/admin" } }); }); app.get("/health", (req, res) => { res.json({ status: "OK", timestamp: new Date().toISOString(), uptime: process.uptime() }); }); app.post("/api/onboarding/start", (req, res) => { const { whatsappNumber, goLiveDate, businessName } = req.body; if (!whatsappNumber || !goLiveDate) { return res.status(400).json({ error: "WhatsApp number and go-live date are required" }); } const goLive = moment(goLiveDate, "DD/MM/YYYY"); const today = moment(); const daysUntilGoLive = goLive.diff(today, "days"); const slaThreshold = 5; const canMeetSLA = daysUntilGoLive >= slaThreshold; const merchantId = "merchant-" + Date.now(); const merchant = { merchantId, whatsappNumber, businessName, goLiveDate: goLive.toDate(), slaStatus: canMeetSLA ? "within_sla" : "at_risk", currentStep: "welcome", status: canMeetSLA ? "initiated" : "escalated", createdAt: new Date() }; merchants.set(merchantId, merchant); res.json({ success: true, merchantId, canMeetSLA, daysUntilGoLive, status: merchant.status, message: canMeetSLA ? `✅ Great! We can meet your Go-Live date of ${goLiveDate}. You have ${daysUntilGoLive} days.` : `⚠️ Tight timeline! Only ${daysUntilGoLive} days until Go-Live. Escalating to specialist team.` }); }); app.get("/api/onboarding/status/:merchantId", (req, res) => { const merchant = merchants.get(req.params.merchantId); if (!merchant) { return res.status(404).json({ error: "Merchant not found" }); } res.json(merchant); }); app.get("/api/admin/dashboard", (req, res) => { const totalMerchants = merchants.size; const escalatedMerchants = Array.from(merchants.values()).filter(m => m.status === "escalated").length; const atRiskMerchants = Array.from(merchants.values()).filter(m => m.slaStatus === "at_risk").length; res.json({ totalMerchants, escalatedMerchants, atRiskMerchants, completionRate: 0 }); }); app.listen(PORT, () => { console.log(`🚀 WhatsApp Onboarding Assistant running on port ${PORT}`); console.log(`📱 API URL: http://localhost:${PORT}`); console.log(`🔗 Ready for testing!`); });
const webhookRoutes = require("./routes/webhook"); app.use("/api/webhook", webhookRoutes);
